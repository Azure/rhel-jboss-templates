name: Build offers
description: Build offers

inputs:
  offerName:
    description: "offerName"
    required: true
  token:
    description: "GitHub token"
    required: true
  workflowType:
    description: "workflowType, 'build' or 'validate' "
    required: true

outputs:
  artifactName:
    description: "artifactName"
    value: ${{ steps.artifact_file.outputs.artifactName }}
  artifactPath:
    description: "artifactPath"
    value: ${{ steps.artifact_file.outputs.artifactPath }}

runs:
  using: "composite"
  steps:
    - name: Get versions of external dependencies
      shell: bash
      run: |
        curl -Lo external-deps-versions.properties https://raw.githubusercontent.com/Azure/azure-javaee-iaas/main/external-deps-versions.properties
        source external-deps-versions.properties
        echo "bicepVersion=${BICEP_VERSION}" >> "$GITHUB_ENV"

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME # env variable for username
        server-password: MAVEN_TOKEN # env variable for token

    - name: Set Maven env
      env:
        MAVEN_USERNAME: github
        MAVEN_TOKEN: ${{ inputs.token }}
      shell: bash
      run: |
        echo "MAVEN_USERNAME=${MAVEN_USERNAME}" >> "$GITHUB_ENV"
        echo "MAVEN_TOKEN=${MAVEN_TOKEN}" >> "$GITHUB_ENV"

    - name: Set up bicep
      shell: bash
      run: |
        curl -Lo bicep https://github.com/Azure/bicep/releases/download/${{ env.bicepVersion }}/bicep-linux-x64
        chmod +x ./bicep
        sudo mv ./bicep /usr/local/bin/bicep
        bicep --version

    # for build workflows, use downloaded arm-ttk
    # for validate workflows, use Checkout arm-ttk
    - name: Download arm-ttk used in partner center pipeline
      shell: bash
      if: ${{ inputs.workflowType == 'build' }}
      run: |
        echo "workflowType is "  ${{ inputs.workflowType }}  
        wget -O arm-template-toolkit.zip https://aka.ms/arm-ttk-azureapps
        unzip arm-template-toolkit.zip -d ../arm-ttk

    - name: Checkout arm-ttk
      uses: actions/checkout@v4
      if: ${{ inputs.workflowType == 'validate' }}
      with:
        repository: Azure/arm-ttk
        path: arm-ttk/arm-ttk

    - name: Move arm-ttk
      if: ${{ inputs.workflowType == 'validate' }}
      shell: bash
      run: |
        mkdir -p ../arm-ttk
        cp -r arm-ttk/arm-ttk/. ../arm-ttk

    - name: Build ${{ inputs.offerName }}
      shell: bash
      run: |
        mvn -Pbicep -Passembly clean install -Ptemplate-validation-tests --file ${{ inputs.offerName }}/pom.xml

    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3

    - name: Generate artifact file name and path
      id: artifact_file
      shell: bash
      run: |
        version=$(mvn -q -Dexec.executable=echo -Dexec.args='${version.${{ inputs.offerName }}}' --file pom.xml --non-recursive exec:exec)
        artifactName=${{ inputs.offerName }}-$version-arm-assembly
        unzip ${{ inputs.offerName }}/target/$artifactName.zip -d ${{ inputs.offerName }}/target/$artifactName
        
        echo "artifactName=${artifactName}" >> "$GITHUB_OUTPUT"
        echo "artifactPath=${{ inputs.offerName }}/target/$artifactName" >> "$GITHUB_OUTPUT"

    - name: Move eap-session-replication.war from /bin to /scripts
      shell: bash
      run: |
        artifactName=${{steps.artifact_file.outputs.artifactName}}
        if [ -d "${{ inputs.offerName }}/target/$artifactName/bin" ]; then
          echo "${{ inputs.offerName }}/target/$artifactName/bin exist..."
        
          if [[ ${{ inputs.offerName }} == *"byos"* ]]; then
            # Move eap-session-replication.war from /bin to /scripts, a workaround for publishing private plan in Partner center, 
            # see issue: https://github.com/Azure/rhel-jboss-templates/issues/108
            # This change is coupled with /src/main/bicep/mainTemplate.bicep
            cp -R ${{ inputs.offerName }}/target/$artifactName/bin/. ${{ inputs.offerName }}/target/$artifactName/scripts/
            # Delete /bin 
            rm -r ${{ inputs.offerName }}/target/$artifactName/bin
          else
            echo "offerName does not contain byos, skip this step."
          fi
        
        else
          echo "${{ inputs.offerName }}/target/$artifactName/bin does not exist, skip this step."
        fi

    - name: Archive ${{ inputs.offerName }} template
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: success()
      with:
        name: ${{steps.artifact_file.outputs.artifactName}}
        path: ${{steps.artifact_file.outputs.artifactPath}}
