name: Get Database parameters
description: Get Database parameters

inputs:
  databaseType:
    description: "databaseType"
    required: true
  uamiId:
    description: "uamiId"
    required: true
  serverHost:
    description: "serverHost"
    required: true
  dbInstanceName:
    description: "dbInstanceName"
    required: true


outputs:
  enableDB:
    description: "enableDB"
    value: ${{ steps.database-parameters.outputs.enableDB }}
  enablePswlessConnection:
    description: "enablePswlessConnection"
    value: ${{ steps.database-parameters.outputs.enablePswlessConnection }}
  databaseType:
    description: "databaseType"
    value: ${{ steps.database-parameters.outputs.databaseType }}
  dsConnectionURL:
    description: "dsConnectionURL"
    value: ${{ steps.database-parameters.outputs.dsConnectionURL }}
  dbUser:
    description: "dbUser"
    value: ${{ steps.database-parameters.outputs.dbUser }}
  dbIdentity:
    description: "dbIdentity"
    value: ${{ steps.database-parameters.outputs.dbIdentity }}

runs:
  using: "composite"
  steps:
    - name: Set up environment variables
      shell: bash
      id: database-parameters
      run: |
        enableDB=false
        databaseType=mssqlserver
        dsConnectionURL=jdbc:postgresql://contoso.postgres.database:5432/testdb
        dbUser=contosoDbUser
        dbPassword=contosoDbPwd
        enablePswlessConnection=false
        dbIdentity={}
        serverHost=${{ inputs.serverHost }}
        uamiId=${{ inputs.uamiId }}
        if ${{ inputs.databaseType == 'mssqlserver' }}; then
          enableDB=true
          databaseType=mssqlserver
          dsConnectionURL="jdbc:sqlserver://$serverHost:1433;database=testdb"
          dbUser=testuser@${{ inputs.dbInstanceName }}
        elif ${{ inputs.databaseType == 'mssqlserver-passwordless' }}; then
          enableDB=true
          enablePswlessConnection=true
          databaseType=mssqlserver
          dsConnectionURL="jdbc:sqlserver://$serverHost:1433;database=testdb"
          dbUser=testuser@${{ inputs.dbInstanceName }} 
          dbIdentity=$(jq -n \
                          --arg uamiId "$uamiId" \
                          '{
                                "type": "UserAssigned",
                                "userAssignedIdentities": {
                                    ($uamiId): {}
                                }
                            }'| jq -c '.')
        elif ${{ inputs.databaseType == 'oracle' }}; then
          enableDB=true
          databaseType=oracle
          dsConnectionURL=jdbc:oracle:thin:@${serverHost}:1521/oratest1
          dbUser=testuser
        elif ${{ inputs.databaseType == 'mysql(flexible)' }}; then
          enableDB=true
          databaseType=mysql
          dsConnectionURL=jdbc:mysql://$serverHost:3306/testdb?sslMode=REQUIRED
          dbUser=testuser
        elif ${{ inputs.databaseType == 'mysql-passwordless(flexible)' }}; then
          enableDB=true
          enablePswlessConnection=true
          dbUser=$(basename "$uamiId")
          dbIdentity=$(jq -n \
                        --arg uamiId "$uamiId" \
                        '{
                              "type": "UserAssigned",
                              "userAssignedIdentities": {
                                  ($uamiId): {}
                              }
                          }'| jq -c '.')
          databaseType=mysql
          dsConnectionURL=jdbc:mysql://$serverHost:3306/testdb
        elif ${{ inputs.databaseType == 'postgresql(flexible)' }}; then
          enableDB=true
          databaseType=postgresql
          dsConnectionURL="jdbc:postgresql://$serverHost:5432/testdb"
          dbUser=testuser
        elif ${{ inputs.databaseType == 'postgresql-passwordless(flexible)' }}; then
          enableDB=true
          enablePswlessConnection=true
          dbUser=$(basename "$uamiId")
          dbIdentity=$(jq -n \
                        --arg uamiId "$uamiId" \
                        '{
                              "type": "UserAssigned",
                              "userAssignedIdentities": {
                                  ($uamiId): {}
                              }
                          }'| jq -c '.')
          databaseType=postgresql
          dsConnectionURL="jdbc:postgresql://$serverHost:5432/testdb"
        fi
        
        echo "enableDB=$enableDB" >> "$GITHUB_OUTPUT"
        echo "enablePswlessConnection=$enablePswlessConnection" >> "$GITHUB_OUTPUT"
        echo "databaseType=$databaseType" >> "$GITHUB_OUTPUT"
        echo "dsConnectionURL=$dsConnectionURL" >> "$GITHUB_OUTPUT"
        echo "dbUser=$dbUser" >> "$GITHUB_OUTPUT"
        echo "dbIdentity=$dbIdentity" >> "$GITHUB_OUTPUT"