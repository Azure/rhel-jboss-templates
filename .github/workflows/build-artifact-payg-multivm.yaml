name: Build PAYG multivm artifact

on:
  repository_dispatch:
    types: [payg-multivm-package, payg-package, all-package]
  workflow_dispatch:
    inputs:
      ref:
        description: 'Specify Git Ref if needed.'
        required: false
        default: 'refs/heads/main'
  # Sample cURL
  # curl --verbose -X POST https://api.github.com/repos/<github_user>/rhel-jboss-templates/dispatches -H 'Accept: application/vnd.github.everest-preview+json' -H 'Authorization: token <personal_access_token>' --data '{"event_type": "payg-multivm-package", "client_payload": {"ref": "refs/heads/main"}}'

env:
    location: eastus
    offerName: "eap74-rhel8-payg-multivm"
    repoName: "rhel-jboss-templates"
    repoOwner: ${{ secrets.USER_NAME }}

jobs:
    preflight:
        runs-on: ubuntu-latest
        steps:
            - name: Get versions of external dependencies
              run: |
                curl -Lo external-deps-versions.properties https://raw.githubusercontent.com/Azure/azure-javaee-iaas/main/external-deps-versions.properties
                source external-deps-versions.properties
                echo "azCliVersion=${AZ_CLI_VERSION}" >> $GITHUB_ENV
                echo "bicepVersion=${BICEP_VERSION}" >> $GITHUB_ENV
                echo "refArmttk=${ARM_TTK_REFERENCE}" >> $GITHUB_ENV
                echo "refJavaee=9850b0ba70d705479b66967a1311ecae145c6b30" >> $GITHUB_ENV
            - name: Setup environment variables
              id: setup-env-variables-based-on-dispatch-event
              run: |
                if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
                    ref=${{ github.event.inputs.ref }}
                else
                    ref=${{ github.event.client_payload.ref }}
                fi
                if [ -z "$ref" ]; then
                    ref='refs/heads/main'
                fi
                echo "##[set-output name=ref;]${ref}"
                echo "ref=${ref}" >> $GITHUB_ENV
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                distribution: 'temurin'
                java-version: '11'
            - name: Set up bicep
              run: |
                curl -Lo bicep https://github.com/Azure/bicep/releases/download/${{ env.bicepVersion }}/bicep-linux-x64
                chmod +x ./bicep
                sudo mv ./bicep /usr/local/bin/bicep
                bicep --version
            - name: Checkout azure-javaee-iaas
              uses: actions/checkout@v3
              with:
                repository: Azure/azure-javaee-iaas
                path: azure-javaee-iaas
                ref: ${{ env.refJavaee }}
            - name: Download arm-ttk used in partner center pipeline
              run: |
                wget -O arm-template-toolkit.zip https://aka.ms/arm-ttk-azureapps
                unzip arm-template-toolkit.zip -d arm-ttk

            - name: Build azure-javaee-iaas
              run: mvn -DskipTests clean install --file azure-javaee-iaas/pom.xml
            - name: Checkout ${{ env.repoName }}
              uses: actions/checkout@v3
              with:
                path: ${{ env.repoName }}
                ref: ${{ env.ref }}
            - name: Build ${{ env.offerName }}
              run: |
                cd ${{env.repoName}}/${{ env.offerName }}
                mvn -Pbicep -Passembly clean install -Ptemplate-validation-tests
            - name: Generate artifact file name and path
              id: artifact_file
              run: |
                version=$(mvn -q -Dexec.executable=echo -Dexec.args='${version.${{ env.offerName }}}' --file rhel-jboss-templates/pom.xml --non-recursive exec:exec)
                artifactName=${{ env.offerName }}-$version-arm-assembly
                unzip rhel-jboss-templates/${{ env.offerName }}/target/$artifactName.zip -d rhel-jboss-templates/${{ env.offerName }}/target/$artifactName
                echo "##[set-output name=artifactName;]${artifactName}"
                echo "##[set-output name=artifactPath;]rhel-jboss-templates/${{ env.offerName }}/target/$artifactName"
            - name: Archive rhel-jboss-templates/${{ env.offerName }} template
              uses: actions/upload-artifact@v1
              if: success()
              with:
                name: ${{steps.artifact_file.outputs.artifactName}}
                path: ${{steps.artifact_file.outputs.artifactPath}}
