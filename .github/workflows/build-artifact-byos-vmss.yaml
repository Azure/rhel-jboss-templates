name: Build BYOS VMSS artifact

on:
  repository_dispatch:
    types: [byos-vmss-package, byos-package, all-package]
  workflow_dispatch:
    inputs:
      ref:
        description: 'Specify Git Ref if needed.'
        required: false
        default: 'refs/heads/master'
  # Sample cURL
  # curl --verbose -X POST https://api.github.com/repos/<github_user>/rhel-jboss-templates/dispatches -H 'Accept: application/vnd.github.everest-preview+json' -H 'Authorization: token <personal_access_token>' --data '{"event_type": "byos-vmss-package", "client_payload": {"ref": "refs/heads/master"}}'

env:
    refArmttk: bad2965565e2e69318039bc15c2496844d55a59d
    refJavaee: f25ab89a2a8848da39b84e5d6c927f4c4cb47200
    azCliVersion: 2.30.0
    location: eastus
    offerName: "eap74-rhel8-byos-vmss"
    repoName: "rhel-jboss-templates"
    repoOwner: ${{ secrets.USER_NAME }}

jobs:
    preflight:
        runs-on: ubuntu-latest
        steps:
            - name: Setup environment variables
              id: setup-env-variables-based-on-dispatch-event
              run: |
                if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
                    ref=${{ github.event.inputs.ref }}
                else
                    ref=${{ github.event.client_payload.ref }}
                fi
                if [ -z "$ref" ]; then
                    ref='refs/heads/master'
                fi
                echo "##[set-output name=ref;]${ref}"
                echo "ref=${ref}" >> $GITHUB_ENV
            - name: Set up JDK 1.8
              uses: actions/setup-java@v1
              with:
                java-version: 1.8
            - name: Set up bicep
              run: |
                curl -Lo bicep https://github.com/Azure/bicep/releases/download/v0.8.9/bicep-linux-x64
                chmod +x ./bicep
                sudo mv ./bicep /usr/local/bin/bicep
                bicep --version
            - name: Checkout azure-javaee-iaas
              uses: actions/checkout@v2
              with:
                repository: Azure/azure-javaee-iaas
                path: azure-javaee-iaas
                ref: ${{ env.refJavaee }}
            - name: Checkout arm-ttk
              uses: actions/checkout@v2
              with:
                repository: Azure/arm-ttk
                path: arm-ttk
                ref: ${{ env.refArmttk }}
            - name: Build azure-javaee-iaas
              run: mvn -DskipTests clean install --file azure-javaee-iaas/pom.xml
            - name: Checkout ${{ env.repoName }}
              uses: actions/checkout@v2
              with:
                path: ${{ env.repoName }}
                ref: ${{ env.ref }}
            - name: Build ${{ env.offerName }}
              run: |
                cd ${{env.repoName}}/${{ env.offerName }}
                mvn -Pbicep -Passembly clean install
            - name: Generate artifact file name and path
              id: artifact_file
              run: |
                version=$(awk '/<version>[^<]+<\/version>/{gsub(/<version>|<\/version>/,"",$1);print $1;exit;}' rhel-jboss-templates/${{ env.offerName }}/pom.xml)
                artifactName=${{ env.offerName }}-$version-arm-assembly
                unzip rhel-jboss-templates/${{ env.offerName }}/target/$artifactName.zip -d rhel-jboss-templates/${{ env.offerName }}/target/$artifactName
                # Move eap-session-replication.war from /bin to /scripts, a walkaround for publishing private plan in Partner center
                cp -R rhel-jboss-templates/${{ env.offerName }}/target/$artifactName/bin/. rhel-jboss-templates/${{ env.offerName }}/target/$artifactName/scripts/
                # Delete /bin 
                rm -r rhel-jboss-templates/${{ env.offerName }}/target/$artifactName/bin
                echo "##[set-output name=artifactName;]${artifactName}"
                echo "##[set-output name=artifactPath;]rhel-jboss-templates/${{ env.offerName }}/target/$artifactName"
            - name: Archive rhel-jboss-templates/${{ env.offerName }} template
              uses: actions/upload-artifact@v1
              if: success()
              with:
                name: ${{steps.artifact_file.outputs.artifactName}}
                path: ${{steps.artifact_file.outputs.artifactPath}}
