name: test new sp in aro

on:
  workflow_dispatch:
    inputs:
      useExistingCluster:
        description: 'Use existing ARO cluster?'
        required: true
        type: boolean
        default: false
      clusterName:
        description: 'Name of existing ARO cluster'
        required: false
        type: string
        default: ''
      clusterRGName:
        description: 'Resource group Name of existing ARO cluster'
        required: false
        type: string
        default: ''
      timeWaitBeforeDelete:
        description: 'Choose the wait time before deleting resources: 30m (30 minutes), 2h (2 hours), 5h (5 hours), 0 (immediately)'
        required: true
        type: choice
        default: 0
        options:
          - 30m
          - 2h
          - 5h
          - 0

env:
  azCliVersion: 2.30.0
  location: eastus
  aroResourceGroup: aro-${{ github.repository_owner }}-${{ github.run_id }}-${{ github.run_number }}
  aroTestBranchName: aro-cicd-${{ github.run_id }}-${{ github.run_number }}

  azureCredentials: ${{ secrets.AZURE_CREDENTIALS_PAYG }}
  gitUserName: ${{ secrets.USER_NAME }}
  gitEmail: ${{ secrets.USER_EMAIL }}
  # To get pull secret text, see Get a Red Hat pull secret.
  # https://learn.microsoft.com/en-us/azure/openshift/tutorial-create-cluster?WT.mc_id=Portal-fx#get-a-red-hat-pull-secret-optional
  pullSecret: ${{ secrets.PULL_SECRET }}
  conRegAccUserName: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
  conRegAccPwd: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

  offerName: "eap-aro"

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout rhel-jboss-templates
        uses: actions/checkout@v4
        with:
          path: rhel-jboss-templates
      - uses: azure/login@v1
        id: azure-login
        with:
          creds: ${{ env.azureCredentials }}
      - name: Prepare parameter file
        id: prepare-parameter-file
        run: |
          servicePrincipal=$(az ad sp create-for-rbac --sdk-auth)
          clientId=$(echo $servicePrincipal | jq -r '.clientId')
          echo "clientId=${clientId}" >> $GITHUB_ENV
          echo "clientId=${clientId}" >> "$GITHUB_OUTPUT"
          clientSecret=$(echo $servicePrincipal | jq -r '.clientSecret')
          aadObjectId=$(az ad sp show --id ${clientId} --query id -o tsv)
          rpObjectId=$(az ad sp list --display-name "Azure Red Hat OpenShift RP" --query [0].id -o tsv)
          
          az ad app delete --id ${clientId}
            
