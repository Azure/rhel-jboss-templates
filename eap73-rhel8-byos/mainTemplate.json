{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "vmName": {
            "type": "String",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Linux VM user account name"
            }
        },
        "authenticationType": {
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine"
            }
        },
        "adminPasswordOrSSHKey": {
            "type": "SecureString",
            "metadata": {
                "description": "Password or SSH key for the Virtual Machine"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS2_v2",
            "type": "String",
            "metadata": {
                "description": "The size of the Virtual Machine"
            }
        },
        "bootDiagnostics": {
            "defaultValue": "on",
            "allowedValues": [
                "off",
                "on"
            ],
            "type": "String",
            "metadata": {
                "description": "Capture serial console outputs and screenshots of the virtual machine running on a host to help diagnose startup issues"
            }
        },
        "storageNewOrExisting": {
            "defaultValue": "new",
            "type": "String",
            "metadata": {
                "description": "Determines whether or not a new storage account should be provisioned."
            }
        },
        "storageAccountName": {
            "defaultValue": "[concat('storage', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "Name of the storage account"
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "type": "String",
            "metadata": {
                "description": "Storage account type"
            }
        },
        "storageAccountKind": {
            "defaultValue": "Storage",
            "type": "String",
            "metadata": {
                "description": "Storage account kind"
            }
        },
        "virtualNetworkNewOrExisting": {
            "defaultValue": "new",
            "type": "String",
            "metadata": {
                "description": "Determines whether or not a new virtual network should be provisioned."
            }
        },
        "virtualNetworkName": {
            "defaultValue": "VirtualNetwork",
            "type": "String",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "addressPrefixes": {
            "type": "Array",
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "metadata": {
                "description": "Address prefix of the virtual network"
            }
        },
        "subnetName": {
            "defaultValue": "default",
            "type": "String",
            "metadata": {
                "description": "Name of the subnet"
            }
        },
        "subnetPrefix": {
            "defaultValue": "10.0.0.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet prefix of the virtual network"
            }
        },
        "virtualNetworkResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "Name of the resource group for the existing virtual network"
            }
        },
        "jbossEAPUserName": {
            "type": "String",
            "metadata": {
                "description": "User name for JBoss EAP Manager"
            }
        },
        "jbossEAPPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for JBoss EAP Manager"
            }
        },
        "rhsmUserName": {
            "type": "string",
            "metadata": {
                "description": "User name for Red Hat subscription Manager"
            }
        },
        "rhsmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for Red Hat subscription Manager"
            }
        },
        "rhsmPoolEAP": {
            "type": "string",
            "maxLength": 32,
            "minLength": 32,

            "metadata": {
                "description": "Red Hat Subscription Manager Pool ID (Should have EAP entitlement)"
            }
        },
        "rhsmPoolRHEL": {
            "type": "string",
            "maxLength": 32,
            "minLength": 32,
            "metadata": {
                "description": "Red Hat Subscription Manager Pool ID (Should have RHEL entitlement)"
            }
        },
        "_artifactsLocation": {
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "type": "String",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated"
            }
        },
        "_artifactsLocationSasToken": {
            "defaultValue": "",
            "type": "SecureString",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated"
            }
        }
    },
    "variables": {
        "nicName": "[concat(uniquestring(resourceGroup().id), '-nic')]",
        "networkSecurityGroupName": "jbosseap-nsg",
        "bootDiagnosticsCheck": "[and(equals(parameters('storageNewOrExisting'), 'new'), equals(parameters('bootDiagnostics'),'on'))]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrSSHKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "condition": "[variables('bootDiagnosticsCheck')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "[parameters('storageAccountKind')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]"
        },
        {
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('virtualNetworkName')]",
                "[variables('networkSecurityGroupName')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('subnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-12-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "plan": {
                "name": "rhel-lvm84",
                "publisher": "redhat",
                "product": "rhel-byos"
            },
            "dependsOn": [
                "[if(equals(parameters('bootDiagnostics'),'On'), parameters('storageAccountName'), variables('networkSecurityGroupName'))]",
                "[variables('networkSecurityGroupName')]",
                "[variables('nicName')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrSSHKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "redhat",
                        "offer": "rhel-byos",
                        "sku": "rhel-lvm84",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": "[if(equals(parameters('bootDiagnostics'),'On'), json(concat('{\"bootDiagnostics\": {\"enabled\": true,\"storageUri\": \"https://', parameters('storageAccountName'), '.blob.core.windows.net', '\"}}')), json(concat('{\"bootDiagnostics\": {\"enabled\": false}}')))]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('vmName'),'/jbosseap-setup-extension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[parameters('vmName')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat('scripts/jbosseap-setup-redhat.sh', parameters('_artifactsLocationSasToken')))]"
                    ]
                },
                "protectedSettings": {
                   "commandToExecute": "[format('sh jbosseap-setup-redhat.sh ''{0}'' ''{1}'' ''{2}'' ''{3}'' ''{4}'' ''{5}''',  parameters('jbossEAPUserName'),  parameters('jbossEAPPassword'), parameters('rhsmUserName'), parameters('rhsmPassword'), parameters('rhsmPoolEAP'), parameters('rhsmPoolRHEL'))]"
                }
            }
        }
    ],
    "outputs": {
    }
}